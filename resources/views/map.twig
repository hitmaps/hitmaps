{% extends 'base.twig' %}

{% set page_title = "#{model.mission}/#{model.locationNameOne}" %}

{% block headextend %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
          integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
          crossorigin=""/>
    <link rel="stylesheet" href="/css/bootstrap-select.min.css">
    <link rel="stylesheet" href="/css/map.css">

    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
            integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
            crossorigin=""></script>
    <script src="/js/bootstrap-select.min.js"></script>
    <script src="/js/map.js"></script>
{% endblock %}
{% block content %}
    <div id="map"></div>
    <nav class="navbar navbar-fixed-right navbar-light">
        <div class="editor-enabled" style="display: none">
            <h3>Editor Enabled</h3>
        </div>
        <div id="map-control">
            <div class="control-buttons">
                <input type="hidden" name="edit-mode" value="0">
                {% if model.loggedIn %}
                    <button id="edit-button" class="btn control-button" data-toggle="tooltip" title="Edit Map"><i class="fas fa-pencil-alt"></i></button>
                    <a href="/user/profile">
                        <button class="btn control-button" data-toggle="tooltip" data-placement="bottom" title="Profile"><i class="fas fa-user-circle"></i></button>
                    </a>
                    <a href="/user/logout">
                        <button class="btn control-button" data-toggle="tooltip" data-placement="bottom" title="Log out"><i class="fas fa-sign-out-alt"></i></button>
                    </a>
                {% else %}
                    <a href="/user/login">
                        <button class="btn control-button" data-toggle="tooltip" data-placement="bottom" title="Login / Register to edit"><i class="fas fa-sign-in-alt"></i></button>
                    </a>
                {% endif %}
            </div>
        </div>
        <br>
        <a href="#" class="steam-button" style="display: none">Login with Steam</a>
        <div class="accordion" id="accordion">
            {% for typeName,type in model.nodes %}
                <div class="card">
                    <div class="card-header" id="header-{{ loop.index0 }}">
                        <h5 class="mb-0">
                            <a href="javascript:" data-layer="{{ typeName }}|*">
                                <i class="fas fa-circle"></i></a>
                            <a href="javascript:" data-toggle="collapse"
                               data-target="#body-{{ loop.index0 }}" aria-expanded="false" aria-controls="body-{{ loop.index0 }}">
                                {{ typeName }}
                            </a>
                        </h5>
                    </div>
                    <div id="body-{{ loop.index0 }}" class="collapse" aria-labelledby="header-{{ loop.index0 }}" data-parent="#accordion">
                        <div class="card-body">
                            {% for groupName,group in type %}
                                <a href="javascript:" data-layer="{{ typeName }}|{{ groupName }}"><i class="fas fa-circle"></i></a>
                                <b>{{ groupName }}</b>
                                {% for node in group %}
                                    <p>{{ node.name }}</p>
                                {% endfor %}
                            {% endfor %}
                        </div>
                    </div>
                </div>

            {% endfor %}
        </div>
    </nav>
    <div class="modal" id="suggest-edit-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{ model.editorTitle }}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="/api/nodes" method="post">
                    <div class="modal-body">
                        <h3>General Info</h3>
                        <div class="form-group row">
                            <label for="icon" class="col-sm-2 col-form-label">Category</label>
                            <div class="col-sm-10">
                                <select name="icon" class="form-control selectpicker">
                                    <option selected disabled>-- Select --</option>
                                    <optgroup label="Points of Interest">
                                        <option value="Points of Interest|sabotage" data-name="true" data-action="true">Sabotage</option>
                                        <option value="Points of Interest|distraction" data-name="true" data-action="true">Distraction</option>
                                        <option value="Points of Interest|poison" data-name="true" data-target="true">Poison</option>
                                        <option value="Points of Interest|misc-item" data-name="true">Misc Item</option>
                                        <option value="Points of Interest|intel" data-name="true" data-note="Please enter the intel description into the notes field!">Intel</option>
                                        <option value="Points of Interest|disguise" data-name="true">Disguise</option>
                                        <option value="Points of Interest|blend-in" data-name="true">Blend In</option>
                                        <option value="Points of Interest|conceal-item">Conceal Item</option>
                                        <option value="Points of Interest|weapon-crate">Weapon Crate</option>
                                        <option value="Points of Interest|locked-door">Locked Door</option>
                                        <option value="Points of Interest|destroy-evidence">Destroy Evidence</option>
                                    </optgroup>
                                    <optgroup label="Weapons and Tools">
                                        <option value="Weapons and Tools|lethal-melee" data-name="true">Lethal Melee</option>
                                        <option value="Weapons and Tools|non-lethal-melee" data-name="true">Non-Lethal Melee</option>
                                        <option value="Weapons and Tools|explosive" data-name="true">Explosive</option>
                                        <option value="Weapons and Tools|coin">Coin</option>
                                        <option value="Weapons and Tools|poison" data-name="true">Poison</option>
                                        <option value="Weapons and Tools|firearm" data-name="true">Firearm</option>
                                        <option value="Weapons and Tools|ammo" data-name="true">Ammo</option>
                                    </optgroup>
                                    <optgroup label="Navigation">
                                        <option value="Navigation|starting-location" data-name="true">Starting Location</option>
                                        <option value="Navigation|exit-location" data-name="true">Exit Location</option>
                                        <option value="Navigation|agency-pickup" data-name="true" data-pickup="true">Agency Pickup</option>
                                        <option value="Navigation|up-stair" data-direction="true">Stairwell</option>
                                    </optgroup>
                                </select>
                                <input type="hidden" name="group">
                                <div class="help-block"></div>
                            </div>
                        </div>
                        <div class="form-group row" data-type="name" style="display: none">
                            <label for="name" class="col-sm-2 col-form-label">Name</label>
                            <div class="col-sm-10">
                                <input type="text" name="name" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row" data-type="action" style="display: none">
                            <label for="action" class="col-sm-2 col-form-label">
                                Action
                            </label>
                            <div class="col-sm-10">
                                <input type="text" name="action" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row" data-type="target" style="display: none">
                            <label for="target" class="col-sm-2 col-form-label">
                                Target
                            </label>
                            <div class="col-sm-10">
                                <input type="text" name="target" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row" data-type="pickup" style="display: none">
                            <label for="pickup-type" class="col-sm-2 col-form-label">
                                Type
                            </label>
                            <div class="col-sm-10">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="pickup-type" value="large" checked>
                                    <label class="form-check-label" for="large">
                                        Pickup (Large)
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="pickup-type" value="small">
                                    <label class="form-check-label" for="small">
                                        Stash (Small)
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row" data-type="direction" style="display: none">
                            <label for="stairwell-direction" class="col-sm-2 col-form-label">
                                Direction
                            </label>
                            <div class="col-sm-10">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="stairwell-direction" value="up-stair" checked>
                                    <label class="form-check-label" for="up-stair">
                                        Up Only
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="stairwell-direction" value="up-down-stair">
                                    <label class="form-check-label" for="up-down-stair">
                                        Up and Down
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="stairwell-direction" value="down-stair">
                                    <label class="form-check-label" for="down-stair">
                                        Down Only
                                    </label>
                                </div>
                            </div>
                        </div>
                        <h3>Notes</h3>
                        <div id="suggest-notes">
                            <div class="form-group row">
                                <label for="note-type[]" class="col-sm-2 col-form-label">Type</label>
                                <div class="col-sm-10">
                                    <select class="form-control selectpicker" name="note-type[]">
                                        <option value="requirement">Requirement</option>
                                        <option value="warning">Warning</option>
                                        <option value="info">Information</option>
                                        <option value="description">Description</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="note-text[]" class="col-sm-2 col-form-label">Text</label>
                                <div class="col-sm-10">
                                    <input type="text" name="note-text[]" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-8 offset-sm-2">
                                <button type="button" id="add-note-button" class="btn btn-dark">+ Add Another Note</button>
                            </div>
                        </div>
                        <div class="note-template" style="display: none">
                            <div class="form-group row">
                                <label for="note-type[]" class="col-sm-2 col-form-label">Type</label>
                                <div class="col-sm-10">
                                    <select class="form-control" name="note-type[]">
                                        <option value="requirement">Requirement</option>
                                        <option value="warning">Warning</option>
                                        <option value="info">Information</option>
                                        <option value="description">Description</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="note-text[]" class="col-sm-2 col-form-label">Text</label>
                                <div class="col-sm-10">
                                    <input type="text" name="note-text[]" class="form-control">
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="mission-id" value="{{ model.missionId }}">
                        <input type="hidden" name="level" value="0">
                        <input type="hidden" name="latitude">
                        <input type="hidden" name="longitude">
                        <input type="hidden" name="difficulty" value="{{ model.difficulty }}">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script type="text/html" id="popup-template">
        <div>
            <div data-name="name">Stove</div>
            <div data-name="group">Explosion</div>
            <div data-name="target">Start Gas Leak</div>
            <hr>
            <div data-name="notes"></div>
        </div>
    </script>
    <script type="text/html" id="popup-note-template">
        <div>
            <div>
                <div data-name="note-contents"></div>
            </div>
        </div>
    </script>
    <script>
        var g_overlays = {};
        var g_map;

        $('[data-layer]').click(function() {
            var target = $(this).attr('data-layer');
            var typeToggle = target.includes('*');
            var shouldShow = $(this).find('i').hasClass('far');

            if (typeToggle) {
                target = target.replace('*', '');
                for (key in g_overlays) {
                    if (key.includes(target)) {
                        var layerToShowOrHide = g_overlays[key];

                        toggleLayer(layerToShowOrHide, shouldShow);
                    }
                }
            } else {
                var layer = g_overlays[$(this).attr('data-layer')];
                toggleLayer(layer, shouldShow);
            }

            if (shouldShow) {
                $('[data-layer^="' + target + '"]').find('i').removeClass('far').addClass('fas');
            } else {
                $('[data-layer^="' + target + '"]').find('i').addClass('far').removeClass('fas');
            }
        });

        $.ajax({
            url: '/api/nodes?missionId={{ model.missionId }}&difficulty={{ model.difficulty }}',
            method: 'GET',
            success: function(data) {
                json = JSON.parse(data);

                var allLayerGroups = [];
                for (var typeName in json) {
                    var type = json[typeName];
                    for (var groupName in type) {
                        var group = type[groupName];

                        if (g_overlays[typeName + '|' + groupName] === undefined) {
                            g_overlays[typeName + '|' + groupName] = L.layerGroup();
                            allLayerGroups.push(g_overlays[typeName + '|' + groupName]);
                        }

                        for (var k in group) {
                            var node = group[k];
                            L.marker([node.latitude, node.longitude], {
                                icon: L.icon({iconUrl: '/img/map-icons/' + node.icon + '.png',
                                    iconSize: [24, 24],
                                    iconAnchor: [12, 12],
                                    popupAnchor: [0, 0]
                                })}).bindPopup(buildPopup(node)).addTo(g_overlays[typeName + '|' + groupName]);
                        }
                    }
                }

                var mapTileLayer = L.tileLayer('/maps/{{ model.mapFolderName }}/tiles/{z}/{x}/{y}.png', {
                    noWrap: true,
                    attribution: 'Map data &copy; IOI Interactive',
                    minZoom: 3,
                    maxZoom: 5,
                    bounds: [[-.1875, .125], [-200, 207.46875]]
                });
                allLayerGroups.push(mapTileLayer);

                g_map = L.map('map', {
                    maxZoom: 5,
                    minZoom: 3,
                    crs: L.CRS.Simple,
                    layers: allLayerGroups
                }).setView([{{ model.mapCenterLatitude }}, {{ model.mapCenterLongitude }}], 3);
                g_map.setMaxBounds([[-.1875, .125], [-200, 207.46875]]);
                g_map.addEventListener('click', function(e) {
                    if (parseInt($('input[type="hidden"][name="edit-mode"]').val()) === 0) {
                        console.log('editor disabled');
                        return;
                    }

                    console.log('editor enabled');
                    $('#suggest-edit-modal')
                        .find('input[name="latitude"]').val(e.latlng.lat).end()
                        .find('input[name="longitude"]').val(e.latlng.lng).end()
                        .modal('show');
                });
                var zoom = L.control.zoom({position: 'topright'});
                zoom.addTo(g_map);
                //g_map.zoomControl.setPosition('topright');
                $('#map-control').append(zoom.getContainer());
            },
            error: function() {
                alert('An error occurred when trying to get map nodes');
            }
        });

        $('select[name="icon"]').change(function() {
            var $selectedItem = $('select[name="icon"] option:selected');
            $('input[name="group"]').val($selectedItem.text());

            toggleEditorFieldDisplay($selectedItem, 'name');
            toggleEditorFieldDisplay($selectedItem, 'action');
            toggleEditorFieldDisplay($selectedItem, 'target');
            toggleEditorFieldDisplay($selectedItem, 'pickup');
            toggleEditorFieldDisplay($selectedItem, 'direction');
        });

        function toggleEditorFieldDisplay($selectedItem, attribute) {
            if ($selectedItem.attr('data-' + attribute) !== undefined && $selectedItem.attr('data-' + attribute) !== false) {
                $('[data-type="' + attribute + '"]').show();
            } else {
                $('[data-type="' + attribute + '"]').hide();
            }
        }

        $('#add-note-button').click(function() {
            var template = $('.note-template').html();
            $('#suggest-notes').append(template);
        });

        $('form[action="/api/nodes"]').submit(function(e) {
            var $form = $(this);

            $.ajax({
                url: '/api/nodes',
                method: 'POST',
                data: $(this).serialize(),
                success: function(data) {
                    if (JSON.parse(data).approved) {
                        toastr["success"]('Item successfully added to map!');
                        L.marker([$form.find('input[name="latitude"]').val(), $form.find('input[name="longitude"]').val()], {
                            icon: L.icon({iconUrl: '/img/map-icons/' + JSON.parse(data).icon + '.png',
                                iconSize: [24, 24],
                                iconAnchor: [12, 12],
                                popupAnchor: [0, 0]
                            })}).bindPopup(buildPopup(JSON.parse(data))).addTo(g_overlays[JSON.parse(data).type + '|' + JSON.parse(data).group]);
                    } else {
                        toastr["success"]('Suggestion has been submitted. If it is approved by an administrator, it will become visible on the map.');
                    }
                    $('#suggest-edit-modal').modal('hide');
                },
                error: function() {
                    alert('Error!');
                }
            });

            console.log("Done adding node.");
            return false;
        });

        function toggleLayer(layer, shouldShow) {
            if (shouldShow) {
                g_map.addLayer(layer);
            } else {
                g_map.removeLayer(layer);
            }
        }

        function buildPopup(node) {
            var $template = $($('#popup-template').html());
            $template.find('[data-name="group"]').html(node.group).end()
                .find('[data-name="name"]').html(node.name).end()
                .find('[data-name="target"]').html(node.target).end();

            for (var i in node.notes) {
                var $noteTemplate = $($('#popup-note-template').html());

                $noteTemplate.find('[data-name="note-contents"]').html(node.notes[i].text).parent().addClass(node.notes[i].type);

                $template.find('[data-name="notes"]').append($noteTemplate.html());
            }

            return $template.html();
        }
    </script>
{% endblock %}