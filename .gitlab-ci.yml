stages:
  - Utilities
  - Prod Deploy
  - Stage Deploy

before_script:
  - apt-get update
  - apt-get install -y lftp
  - apt-get install -y zip
  - apt-get install -y wget
  - apt-get install -y nodejs

Deploy Prod:
  image: php:7.2
  only:
  - master
  stage: Prod Deploy
  script:
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - php composer.phar install --no-dev
  - cd ci/
  - bash deploy_to_prod.sh
  environment:
    name: Production
    url: https://www.hitman2maps.com
  artifacts:
    paths:
    - latest_build/

Deploy API:
  image: php:7.2
  stage: Stage Deploy
  only:
    - stage
  script:
    - cd api/
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - php composer.phar install --no-dev
    - cd ../
    - cd ci/stage/
    - bash deploy_backend.sh
  environment:
    name: Staging API
    url: https://test.hitman2maps.com/api
  artifacts:
    paths:
    - backend/

Deploy Frontend:
  image: node:10
  stage: Stage Deploy
  only:
    - stage
  script:
    - npm ci
    - npm run staging
    - cd ci/stage/
    - bash deploy_frontend.sh
  environment:
    name: Staging Frontend
    url: https://test.hitman2maps.com
  artifacts:
    paths:
      - frontend/


Refresh Stage DB:
  image: php:7.2
  stage: Utilities
  only:
  - stage
  when: manual
  script:
  - wget https://test.hitman2maps.com/refresh-stage-db.php?access-key=$ACCESS_KEY
